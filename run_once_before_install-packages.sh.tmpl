#!/usr/bin/env bash

# Chezmoi run_once script - installs packages based on system detection
# This runs once before applying dotfiles

set -euo pipefail

echo "🔧 Installing packages for {{ .chezmoi.os }}/{{ .chezmoi.arch }}..."

{{- if .is_macos }}
# macOS package installation
if command -v brew >/dev/null 2>&1; then
    echo "📦 Installing Homebrew packages..."

    # Essential tools (minimal set, most tools managed by Nix)
    brew_packages=(
        # Only install Homebrew packages not available or better via Nix
        # Note: git, fzf, ripgrep, tree, jq, yq, just, gh are in Nix flake
    )

    for package in "${brew_packages[@]}"; do
        if ! brew list "$package" >/dev/null 2>&1; then
            echo "Installing $package..."
            brew install "$package"
        fi
    done

    # NOTE: Nix installation is handled by bootstrap-nix-chezmoi.sh
    # Uncomment below if you want conditional Nix installation after bootstrap
    # if ! command -v nix >/dev/null 2>&1; then
    #     echo "🗄️ Installing Nix package manager..."
    #     sh <(curl --proto '=https' --tlsv1.2 -L https://nixos.org/nix/install) --daemon
    #
    #     # Enable flakes
    #     mkdir -p ~/.config/nix
    #     echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
    # fi

    echo "🗄️ Most development tools are managed by Nix (see flake.nix)"
    echo "🔄 Essential tools like git, fzf, ripgrep, direnv, just, gh are in the Nix flake"

else
    echo "⚠️ Homebrew not found. Please install it first."
fi

{{- else if .is_linux }}
# Linux package installation
if command -v apt >/dev/null 2>&1; then
    echo "📦 Installing packages with apt..."

    # Update package list
    sudo apt update

    # Essential tools (minimal set, most tools managed by Nix)
    apt_packages=(
        # Only essential system packages, dev tools are in Nix
        "curl"
        "wget"
    )

    for package in "${apt_packages[@]}"; do
        if ! dpkg -l "$package" >/dev/null 2>&1; then
            echo "Installing $package..."
            sudo apt install -y "$package"
        fi
    done

    # NOTE: Nix installation is handled by bootstrap-nix-chezmoi.sh
    # Uncomment below if you want conditional Nix installation after bootstrap
    # if ! command -v nix >/dev/null 2>&1; then
    #     echo "🗄️ Installing Nix package manager..."
    #     sh <(curl --proto '=https' --tlsv1.2 -L https://nixos.org/nix/install) --daemon
    #
    #     # Enable flakes
    #     mkdir -p ~/.config/nix
    #     echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf
    # fi

elif command -v dnf >/dev/null 2>&1; then
    echo "📦 Installing packages with dnf..."

    # Fedora/RHEL packages (minimal set, most tools managed by Nix)
    dnf_packages=(
        # Only essential system packages, dev tools are in Nix
        "curl"
        "wget"
    )

    for package in "${dnf_packages[@]}"; do
        if ! rpm -q "$package" >/dev/null 2>&1; then
            echo "Installing $package..."
            sudo dnf install -y "$package"
        fi
    done

elif command -v pacman >/dev/null 2>&1; then
    echo "📦 Installing packages with pacman..."

    # Arch packages (minimal set, most tools managed by Nix)
    pacman_packages=(
        # Only essential system packages, dev tools are in Nix
        "curl"
        "wget"
    )

    for package in "${pacman_packages[@]}"; do
        if ! pacman -Q "$package" >/dev/null 2>&1; then
            echo "Installing $package..."
            sudo pacman -S --noconfirm "$package"
        fi
    done

else
    echo "⚠️ No supported package manager found"
fi
{{- end }}

# Note: Using Nix for package management - no fallback version manager needed

echo "✅ Package installation completed!"
